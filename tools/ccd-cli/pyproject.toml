[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ccd-cli"
version = "1.0.0"
description = "CCD for AI (Continuous Context Documentation for AI) CLI tool with AI-CONTEXT integration"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "CCD Team", email = "yegor@martlive.ai"}
]
maintainers = [
    {name = "CCD Team", email = "yegor@martlive.ai"}
]
keywords = ["ccd", "documentation", "context", "rag", "software-development", "ai-context", "code-integration"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Text Processing :: Markup",
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.1.0",
    "pyyaml>=6.0",
    "jsonschema>=4.20.0",
    "rich>=13.7.0",
    "pathlib2>=2.3.7",
    "gitpython>=3.1.0",
    "watchdog>=3.0.0",
    "colorama>=0.4.6",
    "tabulate>=0.9.0",
    "jinja2>=3.1.0",
    "markdown>=3.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
ccd = "ccd_cli.cli:main"

[project.urls]
Homepage = "https://github.com/yegorferrieres/ccd-ai"
Documentation = "https://github.com/yegorferrieres/ccd-ai/tree/main/docs"
Repository = "https://github.com/yegorferrieres/ccd-ai"
"Bug Tracker" = "https://github.com/yegorferrieres/ccd-ai/issues"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ccd_cli"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=ccd_cli",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["ccd_cli"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
